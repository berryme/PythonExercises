An easy, correct way to implement __hash__() is to use a key tuple. It won't be as fast as a specialized hash, but if you need that then you should probably implement the type in C.
Here's an example of using a key for hash and equality:
class A:
    def __key(self):
        return (self.attr_a, self.attr_b, self.attr_c)

    def __hash__(self):
        return hash(self.__key())

    def __eq__(self, other):
        return isinstance(self, type(other)) and self.__key() == other.__key()


You can make sure that pip is up-to-date by running:

py -m pip install --upgrade pip


Start the notebook server from the command line:

jupyter notebook

VSCODE python environments
https://code.visualstudio.com/docs/python/environments



Upgrade all python packages;  DID NOT WORK!!!!

Works on Windows. Should be good for others too. ($ is whatever directory you're in, in command prompt. eg. C:/Users/Username>)

do

$ pip freeze > requirements.txt

open the text file, replace the == with >=

then do

$ pip install -r requirements.txt --upgrade



SHIFT TAB in Jupyter notebook shows signature of methods

pip list --outdated

pip install ipython jedi --upgrade
Powershell
pip freeze | %{$_.split('==')[0]} | %{pip install --upgrade $_}
